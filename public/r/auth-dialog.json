{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "auth-dialog",
  "type": "registry:component",
  "title": "Auth Dialog",
  "description": "A simple auth dialog component.",
  "registryDependencies": [
    "dialog",
    "tabs",
    "button",
    "input",
    "label",
    "card"
  ],
  "files": [
    {
      "path": "src/components/ui/auth-dialog.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { ArrowLeft } from \"lucide-react\";\n\ninterface AuthDialogProps {\n  children?: React.ReactNode;\n  isOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  defaultTab?: \"login\" | \"register\";\n  onLogin?: (data: { email: string; password: string }) => void;\n  onRegister?: (data: { name: string; email: string; password: string; confirmPassword: string }) => void;\n  onGoogleAuth?: () => void;\n  onGithubAuth?: () => void;\n  onResetPassword?: (data: { email: string }) => void;\n  isLoading?: boolean;\n}\n\n// Icônes SVG pour Google et Github\nconst GoogleIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\n    <path\n      d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n      fill=\"#4285F4\"\n    />\n    <path\n      d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n      fill=\"#34A853\"\n    />\n    <path\n      d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n      fill=\"#FBBC05\"\n    />\n    <path\n      d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n      fill=\"#EA4335\"\n    />\n  </svg>\n);\n\nconst GithubIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n    <path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" />\n  </svg>\n);\n\nexport function AuthDialog({\n  children = <Button variant=\"outline\">Se connecter</Button>,\n  isOpen,\n  onOpenChange,\n  defaultTab = \"login\",\n  onLogin,\n  onRegister,\n  onGoogleAuth,\n  onGithubAuth,\n  onResetPassword,\n  isLoading = false,\n}: AuthDialogProps) {\n  const [showResetPassword, setShowResetPassword] = useState(false);\n\n  const handleLoginSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const data = {\n      email: formData.get(\"email\") as string,\n      password: formData.get(\"password\") as string,\n    };\n    onLogin?.(data);\n  };\n\n  const handleRegisterSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const data = {\n      name: formData.get(\"name\") as string,\n      email: formData.get(\"email\") as string,\n      password: formData.get(\"password\") as string,\n      confirmPassword: formData.get(\"confirmPassword\") as string,\n    };\n    onRegister?.(data);\n  };\n\n  const handleResetPasswordSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    const data = {\n      email: formData.get(\"email\") as string,\n    };\n    onResetPassword?.(data);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogTrigger asChild>{children}</DialogTrigger>\n      <DialogContent className=\"sm:max-w-[425px]\">\n        <DialogHeader>\n          <DialogTitle>Authentification</DialogTitle>\n          <DialogDescription>Connectez-vous à votre compte ou créez-en un nouveau.</DialogDescription>\n        </DialogHeader>\n\n        <Tabs defaultValue={defaultTab} className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-2\">\n            <TabsTrigger value=\"login\">Connexion</TabsTrigger>\n            <TabsTrigger value=\"register\">Inscription</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"login\">\n            <Card>\n              <CardHeader>\n                {showResetPassword && (\n                  <Button variant=\"ghost\" size=\"sm\" className=\"w-fit mb-2\" onClick={() => setShowResetPassword(false)}>\n                    <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                    Retour\n                  </Button>\n                )}\n                <CardTitle>{showResetPassword ? \"Réinitialiser le mot de passe\" : \"Connexion\"}</CardTitle>\n                <CardDescription>\n                  {showResetPassword\n                    ? \"Entrez votre adresse email pour recevoir un lien de réinitialisation.\"\n                    : \"Connectez-vous avec votre email et mot de passe.\"}\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4 h-[560px]\">\n                {showResetPassword ? (\n                  <form onSubmit={handleResetPasswordSubmit} className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"reset-email\">Email</Label>\n                      <Input\n                        id=\"reset-email\"\n                        name=\"email\"\n                        type=\"email\"\n                        placeholder=\"votre@email.com\"\n                        required\n                        disabled={isLoading}\n                      />\n                    </div>\n                    <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                      {isLoading ? \"Envoi en cours...\" : \"Envoyer le lien de réinitialisation\"}\n                    </Button>\n                  </form>\n                ) : (\n                  <>\n                    <div className=\"space-y-3\">\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        className=\"w-full\"\n                        onClick={onGoogleAuth}\n                        disabled={isLoading}\n                      >\n                        <GoogleIcon />\n                        <span className=\"ml-2\">Continuer avec Google</span>\n                      </Button>\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        className=\"w-full\"\n                        onClick={onGithubAuth}\n                        disabled={isLoading}\n                      >\n                        <GithubIcon />\n                        <span className=\"ml-2\">Continuer avec Github</span>\n                      </Button>\n                    </div>\n\n                    <div className=\"relative\">\n                      <div className=\"absolute inset-0 flex items-center\">\n                        <span className=\"w-full border-t\" />\n                      </div>\n                      <div className=\"relative flex justify-center text-xs uppercase\">\n                        <span className=\"bg-background px-2 text-muted-foreground\">Ou continuer avec</span>\n                      </div>\n                    </div>\n\n                    <form onSubmit={handleLoginSubmit} className=\"space-y-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"login-email\">Email</Label>\n                        <Input\n                          id=\"login-email\"\n                          name=\"email\"\n                          type=\"email\"\n                          placeholder=\"votre@email.com\"\n                          required\n                          disabled={isLoading}\n                        />\n                      </div>\n                      <div className=\"space-y-2\">\n                        <Label htmlFor=\"login-password\">Mot de passe</Label>\n                        <Input\n                          id=\"login-password\"\n                          name=\"password\"\n                          type=\"password\"\n                          placeholder=\"••••••••\"\n                          required\n                          disabled={isLoading}\n                        />\n                      </div>\n                      <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                        {isLoading ? \"Connexion...\" : \"Se connecter\"}\n                      </Button>\n                      <div className=\"text-center\">\n                        <button\n                          type=\"button\"\n                          className=\"text-sm text-muted-foreground hover:text-primary underline-offset-4 hover:underline\"\n                          onClick={() => setShowResetPassword(true)}\n                          disabled={isLoading}\n                        >\n                          Mot de passe oublié ?\n                        </button>\n                      </div>\n                    </form>\n                  </>\n                )}\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"register\">\n            <Card>\n              <CardHeader>\n                <CardTitle>Inscription</CardTitle>\n                <CardDescription>Créez votre compte en remplissant les informations ci-dessous.</CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4 h-[540px]\">\n                <div className=\"space-y-3\">\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    className=\"w-full\"\n                    onClick={onGoogleAuth}\n                    disabled={isLoading}\n                  >\n                    <GoogleIcon />\n                    <span className=\"ml-2\">S&apos;inscrire avec Google</span>\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"outline\"\n                    className=\"w-full\"\n                    onClick={onGithubAuth}\n                    disabled={isLoading}\n                  >\n                    <GithubIcon />\n                    <span className=\"ml-2\">S&apos;inscrire avec Github</span>\n                  </Button>\n                </div>\n\n                <div className=\"relative\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <span className=\"w-full border-t\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-xs uppercase\">\n                    <span className=\"bg-background px-2 text-muted-foreground\">Ou s&apos;inscrire avec</span>\n                  </div>\n                </div>\n\n                <form onSubmit={handleRegisterSubmit} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-name\">Nom complet</Label>\n                    <Input\n                      id=\"register-name\"\n                      name=\"name\"\n                      type=\"text\"\n                      placeholder=\"Votre nom\"\n                      required\n                      disabled={isLoading}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-email\">Email</Label>\n                    <Input\n                      id=\"register-email\"\n                      name=\"email\"\n                      type=\"email\"\n                      placeholder=\"votre@email.com\"\n                      required\n                      disabled={isLoading}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-password\">Mot de passe</Label>\n                    <Input\n                      id=\"register-password\"\n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"••••••••\"\n                      required\n                      disabled={isLoading}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"register-confirm-password\">Confirmer le mot de passe</Label>\n                    <Input\n                      id=\"register-confirm-password\"\n                      name=\"confirmPassword\"\n                      type=\"password\"\n                      placeholder=\"••••••••\"\n                      required\n                      disabled={isLoading}\n                    />\n                  </div>\n                  <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n                    {isLoading ? \"Inscription...\" : \"S'inscrire\"}\n                  </Button>\n                </form>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </DialogContent>\n    </Dialog>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}