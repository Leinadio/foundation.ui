{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "feature-bento-grid",
  "type": "registry:block",
  "title": "Feature Bento Grid",
  "description": "A simple feature bento grid component.",
  "dependencies": [
    "@tabler/icons-react",
    "framer-motion"
  ],
  "registryDependencies": [
    "http://localhost:3000/r/headline.json",
    "https://ui.aceternity.com/registry/bento-grid.json",
    "http://localhost:3000/r/feature-section-with-hover-effects.json"
  ],
  "files": [
    {
      "path": "src/components/ui/feature-bento-grid.tsx",
      "content": "\"use client\";\n\nimport { IconClipboardCopy } from \"@tabler/icons-react\";\nimport { IconFileBroken } from \"@tabler/icons-react\";\nimport { IconSignature } from \"@tabler/icons-react\";\nimport { IconTableColumn } from \"@tabler/icons-react\";\nimport { IconBoxAlignRightFilled } from \"@tabler/icons-react\";\nimport { motion } from \"framer-motion\";\nimport Image from \"next/image\";\nimport { BentoGrid, BentoGridItem } from \"@/components/ui/bento-grid\";\nimport { Headline } from \"@/components/ui/headline\";\nimport { FeatureHoverItem, FeaturesSectionWithHoverEffects } from \"@/components/ui/feature-section-with-hover-effects\";\nimport { ReactNode } from \"react\";\n\nexport const SkeletonOne = () => {\n  const variants = {\n    initial: {\n      x: 0,\n    },\n    animate: {\n      x: 10,\n      rotate: 5,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n  const variantsSecond = {\n    initial: {\n      x: 0,\n    },\n    animate: {\n      x: -10,\n      rotate: -5,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      whileHover=\"animate\"\n      className=\"flex flex-1 w-full h-full min-h-[6rem] dark:bg-dot-white/[0.2] bg-dot-black/[0.2] flex-col space-y-2\"\n    >\n      <motion.div\n        variants={variants}\n        className=\"flex flex-row rounded-full border border-neutral-100 dark:border-white/[0.2] p-2  items-center space-x-2 bg-white dark:bg-black\"\n      >\n        <div className=\"h-6 w-6 rounded-full bg-gradient-to-r from-pink-500 to-violet-500 shrink-0\" />\n        <div className=\"w-full bg-gray-100 h-4 rounded-full dark:bg-neutral-900\" />\n      </motion.div>\n      <motion.div\n        variants={variantsSecond}\n        className=\"flex flex-row rounded-full border border-neutral-100 dark:border-white/[0.2] p-2 items-center space-x-2 w-3/4 ml-auto bg-white dark:bg-black\"\n      >\n        <div className=\"w-full bg-gray-100 h-4 rounded-full dark:bg-neutral-900\" />\n        <div className=\"h-6 w-6 rounded-full bg-gradient-to-r from-pink-500 to-violet-500 shrink-0\" />\n      </motion.div>\n      <motion.div\n        variants={variants}\n        className=\"flex flex-row rounded-full border border-neutral-100 dark:border-white/[0.2] p-2 items-center space-x-2 bg-white dark:bg-black\"\n      >\n        <div className=\"h-6 w-6 rounded-full bg-gradient-to-r from-pink-500 to-violet-500 shrink-0\" />\n        <div className=\"w-full bg-gray-100 h-4 rounded-full dark:bg-neutral-900\" />\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport const SkeletonTwo = () => {\n  const variants = {\n    initial: {\n      width: 0,\n    },\n    animate: {\n      width: \"100%\",\n      transition: {\n        duration: 0.2,\n      },\n    },\n    hover: {\n      width: [\"0%\", \"100%\"],\n      transition: {\n        duration: 2,\n      },\n    },\n  };\n  const arr = new Array(6).fill(0);\n  const widths = [\"70%\", \"85%\", \"60%\", \"95%\", \"75%\", \"65%\"]; // Largeurs prédéfinies\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"animate\"\n      whileHover=\"hover\"\n      className=\"flex flex-1 w-full h-full min-h-[6rem] dark:bg-dot-white/[0.2] bg-dot-black/[0.2] flex-col space-y-2\"\n    >\n      {arr.map((_, i) => (\n        <motion.div\n          key={\"skelenton-two\" + i}\n          variants={variants}\n          style={{\n            maxWidth: widths[i],\n          }}\n          className=\"flex flex-row rounded-full border border-neutral-100 dark:border-white/[0.2] p-2  items-center space-x-2 bg-neutral-100 dark:bg-black w-full h-4\"\n        ></motion.div>\n      ))}\n    </motion.div>\n  );\n};\n\nexport const SkeletonThree = () => {\n  const variants = {\n    initial: {\n      backgroundPosition: \"0 50%\",\n    },\n    animate: {\n      backgroundPosition: [\"0, 50%\", \"100% 50%\", \"0 50%\"],\n    },\n  };\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"animate\"\n      variants={variants}\n      transition={{\n        duration: 5,\n        repeat: Infinity,\n        repeatType: \"reverse\",\n      }}\n      className=\"flex flex-1 w-full h-full min-h-[6rem] dark:bg-dot-white/[0.2] rounded-lg bg-dot-black/[0.2] flex-col space-y-2\"\n      style={{\n        background: \"linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab)\",\n        backgroundSize: \"400% 400%\",\n      }}\n    >\n      <motion.div className=\"h-full w-full rounded-lg\"></motion.div>\n    </motion.div>\n  );\n};\n\nexport const SkeletonFour = () => {\n  const first = {\n    initial: {\n      x: 20,\n      rotate: -5,\n    },\n    hover: {\n      x: 0,\n      rotate: 0,\n    },\n  };\n  const second = {\n    initial: {\n      x: -20,\n      rotate: 5,\n    },\n    hover: {\n      x: 0,\n      rotate: 0,\n    },\n  };\n  return (\n    <motion.div\n      initial=\"initial\"\n      animate=\"animate\"\n      whileHover=\"hover\"\n      className=\"flex flex-1 w-full h-full min-h-[6rem] dark:bg-dot-white/[0.2] bg-dot-black/[0.2] flex-row space-x-2\"\n    >\n      <motion.div\n        variants={first}\n        className=\"h-full w-1/3 rounded-2xl bg-white p-4 dark:bg-black dark:border-white/[0.1] border border-neutral-200 flex flex-col items-center justify-center\"\n      >\n        <Image\n          src=\"https://pbs.twimg.com/profile_images/1417752099488636931/cs2R59eW_400x400.jpg\"\n          alt=\"avatar\"\n          height=\"100\"\n          width=\"100\"\n          className=\"rounded-full h-10 w-10\"\n        />\n        <p className=\"sm:text-sm text-xs text-center font-semibold text-neutral-500 mt-4\">\n          Just code in Vanilla Javascript\n        </p>\n        <p className=\"border border-red-500 bg-red-100 dark:bg-red-900/20 text-red-600 text-xs rounded-full px-2 py-0.5 mt-4\">\n          Delusional\n        </p>\n      </motion.div>\n      <motion.div className=\"h-full relative z-20 w-1/3 rounded-2xl bg-white p-4 dark:bg-black dark:border-white/[0.1] border border-neutral-200 flex flex-col items-center justify-center\">\n        <Image\n          src=\"https://pbs.twimg.com/profile_images/1417752099488636931/cs2R59eW_400x400.jpg\"\n          alt=\"avatar\"\n          height=\"100\"\n          width=\"100\"\n          className=\"rounded-full h-10 w-10\"\n        />\n        <p className=\"sm:text-sm text-xs text-center font-semibold text-neutral-500 mt-4\">\n          Tailwind CSS is cool, you know\n        </p>\n        <p className=\"border border-green-500 bg-green-100 dark:bg-green-900/20 text-green-600 text-xs rounded-full px-2 py-0.5 mt-4\">\n          Sensible\n        </p>\n      </motion.div>\n      <motion.div\n        variants={second}\n        className=\"h-full w-1/3 rounded-2xl bg-white p-4 dark:bg-black dark:border-white/[0.1] border border-neutral-200 flex flex-col items-center justify-center\"\n      >\n        <Image\n          src=\"https://pbs.twimg.com/profile_images/1417752099488636931/cs2R59eW_400x400.jpg\"\n          alt=\"avatar\"\n          height=\"100\"\n          width=\"100\"\n          className=\"rounded-full h-10 w-10\"\n        />\n        <p className=\"sm:text-sm text-xs text-center font-semibold text-neutral-500 mt-4\">\n          I love angular, RSC, and Redux.\n        </p>\n        <p className=\"border border-orange-500 bg-orange-100 dark:bg-orange-900/20 text-orange-600 text-xs rounded-full px-2 py-0.5 mt-4\">\n          Helpless\n        </p>\n      </motion.div>\n    </motion.div>\n  );\n};\n\nexport const SkeletonFive = () => {\n  const variants = {\n    initial: {\n      x: 0,\n    },\n    animate: {\n      x: 10,\n      rotate: 5,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n  const variantsSecond = {\n    initial: {\n      x: 0,\n    },\n    animate: {\n      x: -10,\n      rotate: -5,\n      transition: {\n        duration: 0.2,\n      },\n    },\n  };\n\n  return (\n    <motion.div\n      initial=\"initial\"\n      whileHover=\"animate\"\n      className=\"flex flex-1 w-full h-full min-h-[6rem] dark:bg-dot-white/[0.2] bg-dot-black/[0.2] flex-col space-y-2\"\n    >\n      <motion.div\n        variants={variants}\n        className=\"flex flex-row rounded-2xl border border-neutral-100 dark:border-white/[0.2] p-2  items-start space-x-2 bg-white dark:bg-black\"\n      >\n        <Image\n          src=\"https://pbs.twimg.com/profile_images/1417752099488636931/cs2R59eW_400x400.jpg\"\n          alt=\"avatar\"\n          height=\"100\"\n          width=\"100\"\n          className=\"rounded-full h-10 w-10\"\n        />\n        <p className=\"text-xs text-neutral-500\">\n          There are a lot of cool framerworks out there like React, Angular, Vue, Svelte that can make your life ....\n        </p>\n      </motion.div>\n      <motion.div\n        variants={variantsSecond}\n        className=\"flex flex-row rounded-full border border-neutral-100 dark:border-white/[0.2] p-2 items-center justify-end space-x-2 w-3/4 ml-auto bg-white dark:bg-black\"\n      >\n        <p className=\"text-xs text-neutral-500\">Use PHP.</p>\n        <div className=\"h-6 w-6 rounded-full bg-gradient-to-r from-pink-500 to-violet-500 shrink-0\" />\n      </motion.div>\n    </motion.div>\n  );\n};\n\ntype BentoIconName =\n  | \"IconClipboardCopy\"\n  | \"IconFileBroken\"\n  | \"IconSignature\"\n  | \"IconTableColumn\"\n  | \"IconBoxAlignRightFilled\";\n\nconst bentoIconMap: Record<BentoIconName, React.ComponentType<{ className?: string }>> = {\n  IconClipboardCopy,\n  IconFileBroken,\n  IconSignature,\n  IconTableColumn,\n  IconBoxAlignRightFilled,\n};\n\ntype SkeletonName = \"SkeletonOne\" | \"SkeletonTwo\" | \"SkeletonThree\" | \"SkeletonFour\" | \"SkeletonFive\";\n\nexport const skeletonMap: Record<SkeletonName, React.ComponentType> = {\n  SkeletonOne,\n  SkeletonTwo,\n  SkeletonThree,\n  SkeletonFour,\n  SkeletonFive,\n};\n\nexport interface BentoGridItemData {\n  title: string;\n  description: string;\n  skeleton: SkeletonName;\n  className?: string;\n  icon?: BentoIconName;\n}\n\nexport interface FeatureBentoGridProps {\n  title?: string | ReactNode;\n  description?: string;\n  badge?: { text: string; isBadge: boolean };\n  bentoItems?: BentoGridItemData[];\n  hoverFeatures?: FeatureHoverItem[];\n  color?: string;\n}\n\nconst defaultHoverFeatures: FeatureHoverItem[] = [\n  {\n    title: \"Built for developers\",\n    description: \"Built for engineers, developers, dreamers, thinkers and doers.\",\n    icon: \"IconTerminal2\",\n  },\n  {\n    title: \"Ease of use\",\n    description: \"It's as easy as using an Apple, and as expensive as buying one.\",\n    icon: \"IconEaseInOut\",\n  },\n  {\n    title: \"Pricing like no other\",\n    description: \"Our prices are best in the market. No cap, no lock, no credit card required.\",\n    icon: \"IconCurrencyDollar\",\n  },\n  {\n    title: \"100% Uptime guarantee\",\n    description: \"We just cannot be taken down by anyone.\",\n    icon: \"IconCloud\",\n  },\n  {\n    title: \"Multi-tenant Architecture\",\n    description: \"You can simply share passwords instead of buying new seats\",\n    icon: \"IconRouteAltLeft\",\n  },\n  {\n    title: \"24/7 Customer Support\",\n    description: \"We are available a 100% of the time. Atleast our AI Agents are.\",\n    icon: \"IconHelp\",\n  },\n  {\n    title: \"Money back guarantee\",\n    description: \"If you donot like EveryAI, we will convince you to like us.\",\n    icon: \"IconAdjustmentsBolt\",\n  },\n  {\n    title: \"And everything else\",\n    description: \"I just ran out of copy ideas. Accept my sincere apologies\",\n    icon: \"IconHeart\",\n  },\n];\n\nconst defaultBentoItems: BentoGridItemData[] = [\n  {\n    title: \"AI Content Generation\",\n    description: \"Experience the power of AI in generating unique content.\",\n    skeleton: \"SkeletonOne\",\n    className: \"md:col-span-1\",\n    icon: \"IconClipboardCopy\",\n  },\n  {\n    title: \"Automated Proofreading\",\n    description: \"Let AI handle the proofreading of your documents.\",\n    skeleton: \"SkeletonTwo\",\n    className: \"md:col-span-1\",\n    icon: \"IconFileBroken\",\n  },\n  {\n    title: \"Contextual Suggestions\",\n    description: \"Get AI-powered suggestions based on your writing context.\",\n    skeleton: \"SkeletonThree\",\n    className: \"md:col-span-1\",\n    icon: \"IconSignature\",\n  },\n  {\n    title: \"Sentiment Analysis\",\n    description: \"Understand the sentiment of your text with AI analysis.\",\n    skeleton: \"SkeletonFour\",\n    className: \"md:col-span-2\",\n    icon: \"IconTableColumn\",\n  },\n  {\n    title: \"Text Summarization\",\n    description: \"Summarize your lengthy documents with AI technology.\",\n    skeleton: \"SkeletonFive\",\n    className: \"md:col-span-1\",\n    icon: \"IconBoxAlignRightFilled\",\n  },\n];\n\nexport function FeatureBentoGrid({\n  title = \"What you can do with AI\",\n  description = \"AI is a powerful tool that can help you with your work.\",\n  badge = { text: \"AI\", isBadge: false },\n  bentoItems = defaultBentoItems,\n  hoverFeatures = defaultHoverFeatures,\n  color,\n}: FeatureBentoGridProps) {\n  return (\n    <section className=\"w-full flex flex-col gap-8 md:gap-24\">\n      <Headline title={title} description={description} badge={badge} color={color} />\n      <BentoGrid>\n        {bentoItems.map((item, i) => {\n          const SkeletonComponent = skeletonMap[item.skeleton];\n          const IconComponent = item.icon ? bentoIconMap[item.icon] : null;\n\n          return (\n            <BentoGridItem\n              key={i}\n              title={item.title}\n              description={<span className=\"text-sm\">{item.description}</span>}\n              header={<SkeletonComponent />}\n              icon={IconComponent ? <IconComponent className=\"h-4 w-4 text-neutral-500\" /> : undefined}\n              className={item.className || \"\"}\n            />\n          );\n        })}\n      </BentoGrid>\n      <FeaturesSectionWithHoverEffects features={hoverFeatures} />\n    </section>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}