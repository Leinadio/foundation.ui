{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "header",
  "type": "registry:block",
  "title": "Header",
  "description": "A simple header component.",
  "registryDependencies": [
    "button",
    "badge",
    "navigation-menu",
    "sheet"
  ],
  "files": [
    {
      "path": "src/components/ui/header.tsx",
      "content": "import { ReactNode } from \"react\";\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n  SheetTrigger,\n  SheetClose,\n} from \"@/components/ui/sheet\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Menu } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\nimport { getChildrenByType } from \"@/lib/get-children-by-type\";\n\ninterface NavLink {\n  id: string;\n  label: string;\n  href: string;\n}\n\nexport interface HeaderProps {\n  navigationLinks: NavLink[];\n  children: ReactNode;\n}\n\ninterface HeaderAuthSectionProps {\n  children: ReactNode;\n}\n\ninterface HeaderAuthSectionMobileProps {\n  children: ReactNode;\n}\n\nfunction HeaderAuthSection({ children }: HeaderAuthSectionProps) {\n  return <>{children}</>;\n}\n\nfunction HeaderAuthSectionMobile({ children }: HeaderAuthSectionMobileProps) {\n  return <>{children}</>;\n}\n\nexport function Header({ navigationLinks, children }: HeaderProps) {\n  const authSection = getChildrenByType<HeaderAuthSectionProps>(children, HeaderAuthSection);\n  const authSectionMobile = getChildrenByType<HeaderAuthSectionMobileProps>(children, HeaderAuthSectionMobile);\n\n  return (\n    <header className=\"top-0 left-0 right-0 z-50 transition-all duration-300 bg-background py-2\">\n      <div className=\"container max-w-6xl mx-auto px-4 lg:px-0 flex items-center justify-between transition-all duration-300 h-16\">\n        <div className=\"transition-transform duration-300\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-primary rounded-lg flex items-center justify-center\">\n              <span className=\"text-primary-foreground font-bold text-sm\">F</span>\n            </div>\n            <span className=\"font-bold text-xl text-foreground\">Foundation Builder</span>\n          </div>\n        </div>\n\n        <div className=\"hidden md:flex items-center justify-end flex-1 gap-4\">\n          <NavigationMenu>\n            <NavigationMenuList>\n              {navigationLinks.map((link) => (\n                <NavigationMenuItem key={link.id}>\n                  <NavigationMenuLink\n                    className={cn(navigationMenuTriggerStyle(), \"cursor-pointer\", \"bg-background text-foreground\")}\n                    href={link.href}\n                  >\n                    {link.label}\n                  </NavigationMenuLink>\n                </NavigationMenuItem>\n              ))}\n            </NavigationMenuList>\n          </NavigationMenu>\n\n          <div className=\"flex items-center gap-4\">{authSection?.props.children}</div>\n        </div>\n\n        <div className=\"md:hidden ml-auto\">\n          <Sheet>\n            <SheetTrigger asChild className=\"md:hidden\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"p-2\">\n                <Menu className=\"h-5 w-5\" />\n                <span className=\"sr-only\">Ouvrir le menu</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-[300px] sm:w-[400px]\">\n              <SheetHeader>\n                <SheetTitle className=\"text-left\">Navigation</SheetTitle>\n                <SheetDescription className=\"text-left\">Accédez rapidement aux différentes sections</SheetDescription>\n              </SheetHeader>\n\n              <nav className=\"flex flex-col space-y-4 mt-8\">\n                {navigationLinks.map((link) => (\n                  <SheetClose asChild key={link.id}>\n                    <Button variant=\"ghost\" className=\"justify-start text-left h-auto p-3\" asChild>\n                      <a href={link.href}>{link.label}</a>\n                    </Button>\n                  </SheetClose>\n                ))}\n              </nav>\n\n              <div className=\"mt-8 pt-8 border-t border-border space-y-4\">\n                <Badge variant=\"secondary\" className=\"w-fit\">\n                  Authentification\n                </Badge>\n                <div className=\"flex flex-col space-y-3\">{authSectionMobile?.props.children}</div>\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nHeader.AuthSection = HeaderAuthSection;\nHeader.AuthSectionMobile = HeaderAuthSectionMobile;\n",
      "type": "registry:block"
    },
    {
      "path": "src/lib/get-children-by-type.ts",
      "content": "import { ReactNode, ReactElement, isValidElement, Children } from \"react\";\n\nexport function getChildrenByType<T>(\n  children: ReactNode,\n  targetType: React.ComponentType<T>\n): ReactElement<T> | undefined {\n  const childrenArray = Children.toArray(children);\n\n  const matchingChild = childrenArray.find((child) => {\n    if (!isValidElement(child)) {\n      return false;\n    }\n\n    return child.type === targetType;\n  });\n\n  if (!matchingChild) {\n    return undefined;\n  }\n\n  return matchingChild as ReactElement<T>;\n}\n",
      "type": "registry:lib"
    }
  ]
}