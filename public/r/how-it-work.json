{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "how-it-work",
  "type": "registry:block",
  "title": "How It Work",
  "description": "A simple how it work component.",
  "registryDependencies": [
    "badge",
    "http://localhost:3000/r/headline.json",
    "http://localhost:3000/r/icons.json"
  ],
  "files": [
    {
      "path": "src/components/ui/how-it-work.tsx",
      "content": "import Image from \"next/image\";\nimport { Icons, Variant } from \"@/components/ui/icons\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Headline } from \"@/components/ui/headline\";\nimport { ReactNode } from \"react\";\n\ninterface TextSectionProps {\n  step: string;\n  title: string;\n  description: string;\n  objective: string;\n}\n\nfunction TextSection({ step, title, description, objective }: TextSectionProps) {\n  return (\n    <div className=\"flex flex-col flex-1 gap-4\">\n      <div className=\"flex flex-col gap-2\">\n        <Badge variant=\"default\" className=\"w-fit\">\n          {step}\n        </Badge>\n        <h2 className=\"text-4xl text-foreground font-semibold\">{title}</h2>\n      </div>\n      <p className=\"text-lg text-foreground\">{description}</p>\n      <p className=\"text-md font-medium text-muted-foreground italic\">{objective}</p>\n    </div>\n  );\n}\n\nfunction ImageSection({ src, alt }: { src: string; alt: string }) {\n  return (\n    <div className=\"hidden relative md:block mt-8 md:mt-0\">\n      <div className=\"absolute inset-0 bg-secondary transform translate-x-4 translate-y-4\"></div>\n      <Image src={src} alt={alt} fill className=\"border-2 border-primary-foreground shadow-md\" />\n    </div>\n  );\n}\n\nexport type HowItWorkLayout = \"text-image\" | \"image-text\";\n\nexport interface HowItWorkStepImage {\n  src: string;\n  alt: string;\n}\n\nexport interface HowItWorkStep {\n  step: string;\n  title: string;\n  description: string;\n  objective: string;\n  image: HowItWorkStepImage;\n  layout: HowItWorkLayout;\n}\n\nexport interface HowItWorkProps {\n  title?: string | ReactNode;\n  description?: string;\n  badge?: { text: string; isBadge: boolean };\n  steps?: HowItWorkStep[];\n}\n\nconst defaultSteps: HowItWorkStep[] = [\n  {\n    step: \"√âtape 1\",\n    title: \"Cr√©er un projet\",\n    description:\n      \"Pas besoin d'avoir un business plan en t√™te, ni m√™me un concept parfaitement clair. Vous pouvez entrer une simple id√©e, une intuition, une envie ‚Äî comme 'une app pour √©changer des v√™tements entre voisins' ou 'une solution pour aider les freelances √† mieux g√©rer leurs revenus'.\",\n    objective: \"üéØ Objectif : D√©marrer sans pression, que vous soyez d√©butant ou exp√©riment√©.\",\n    image: { src: \"/images/step1_fr.png\", alt: \"√âtape 1 - Description de votre projet\" },\n    layout: \"text-image\",\n  },\n  {\n    step: \"√âtape 2\",\n    title: \"Analyser votre projet\",\n    description:\n      \"D√®s que votre id√©e est saisie, l'IA se met au travail. Elle r√©fl√©chit comme un analyste business, un expert produit, un marketer et un investisseur r√©unis. Elle identifie votre segment de march√©, le profil des clients potentiels, la probl√©matique que vous r√©solvez et la pertinence de votre solution.\",\n    objective:\n      \"üí° En quelques secondes, vous avez une vision compl√®te de votre projet, bien au-del√† d'un simple brainstorming.\",\n    image: { src: \"/images/step2_fr.png\", alt: \"√âtape 2 - Analyse de votre projet\" },\n    layout: \"image-text\",\n  },\n  {\n    step: \"√âtape 3\",\n    title: \"D√©velopper votre projet\",\n    description:\n      \"Chaque section du rapport est claire, structur√©e et con√ßue pour √™tre actionnable. Vous pouvez relire, comparer, ajuster mentalement ou √† l'√©crit. Besoin d'une nouvelle perspective ? G√©n√©rez une autre version √† partir d'un angle diff√©rent, d'une autre niche ou d'un probl√®me connexe.\",\n    objective: \"üß† C'est comme un outil de r√©flexion rapide, pens√© pour vous aider √† clarifier, it√©rer et avancer.\",\n    image: { src: \"/images/step3_fr.png\", alt: \"√âtape 3 - D√©velopper votre projet\" },\n    layout: \"text-image\",\n  },\n];\n\nfunction makeRowTextImage(step: HowItWorkStep, index: number): ReactNode {\n  return (\n    <div key={`row-${index}`} className=\"grid grid-cols-1 md:grid-cols-2 gap-10 md:gap-20\">\n      <TextSection step={step.step} title={step.title} description={step.description} objective={step.objective} />\n      <ImageSection src={step.image.src} alt={step.image.alt} />\n    </div>\n  );\n}\n\nfunction makeRowImageText(step: HowItWorkStep, index: number): ReactNode {\n  return (\n    <div key={`row-${index}`} className=\"grid grid-cols-1 md:grid-cols-2 gap-10 md:gap-20\">\n      <ImageSection src={step.image.src} alt={step.image.alt} />\n      <TextSection step={step.step} title={step.title} description={step.description} objective={step.objective} />\n    </div>\n  );\n}\n\nfunction iconForIndex(index: number, total: number): ReactNode | null {\n  if (index === 0) {\n    return (\n      <Icons key={`icon-${index}`} variant={Variant.ArrowDown7} className=\"w-36 h-36 flex justify-center mx-auto\" />\n    );\n  }\n  if (index === 1) {\n    return (\n      <Icons key={`icon-${index}`} variant={Variant.ArrowDown6} className=\"w-36 h-36 flex justify-center mx-auto\" />\n    );\n  }\n  if (index === total - 1) {\n    return (\n      <Icons\n        key={`icon-last-${index}`}\n        variant={Variant.ArrowDown7}\n        className=\"w-36 h-36 flex justify-center mx-auto\"\n      />\n    );\n  }\n  return null;\n}\n\nfunction renderStepRows(step: HowItWorkStep, index: number, total: number): ReactNode[] {\n  if (step.layout === \"text-image\") {\n    const main = makeRowTextImage(step, index);\n    const icon = iconForIndex(index, total);\n    if (icon === null) {\n      return [main];\n    }\n    return [main, icon];\n  }\n  const main = makeRowImageText(step, index);\n  const icon = iconForIndex(index, total);\n  if (icon === null) {\n    return [main];\n  }\n  return [main, icon];\n}\n\nfunction buildRows(steps: HowItWorkStep[]): ReactNode[] {\n  const total = steps.length;\n  return steps.flatMap((step, index) => renderStepRows(step, index, total));\n}\n\nexport function HowItWork({\n  title = \"Transformez le chaos en efficacit√©\",\n  description = \"L'efficacit√© retrouv√©e avec notre plateforme\",\n  badge = { text: \"COMMENT √áA MARCHE ?\", isBadge: false },\n  steps = defaultSteps,\n}: HowItWorkProps) {\n  const rows = buildRows(steps);\n  return (\n    <section className=\"flex flex-col gap-8 md:gap-10\">\n      <Headline title={title} description={description} badge={badge} />\n      {rows}\n    </section>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}