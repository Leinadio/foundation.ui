{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pricing",
  "type": "registry:block",
  "title": "Pricing",
  "description": "A simple pricing component.",
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "tabs"
  ],
  "files": [
    {
      "path": "src/components/ui/pricing.tsx",
      "content": "\"use client\";\n\nimport { Check, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { ReactNode } from \"react\";\n\nexport interface PricingPlan {\n  name: string;\n  monthlyPrice: string;\n  yearlyPrice: string;\n  description: string;\n  features: string[];\n  limitations: string[];\n  buttonText: string;\n  popular: boolean;\n}\n\nexport interface PricingProps {\n  title?: string | ReactNode;\n  description?: string;\n  pricingPlans?: PricingPlan[];\n}\n\nfunction PricingCards({ isYearly, pricingPlans }: { isYearly: boolean; pricingPlans: PricingPlan[] }) {\n  return (\n    <div className=\"grid md:grid-cols-3 gap-8 mx-auto\">\n      {pricingPlans.map((plan, index) => {\n        const price = isYearly ? plan.yearlyPrice : plan.monthlyPrice;\n        const period = isYearly ? \"an\" : \"mois\";\n        const monthlyEquivalent =\n          isYearly && plan.name !== \"Gratuit\" ? Math.round(parseInt(plan.yearlyPrice) / 12) : null;\n\n        return (\n          <Card key={plan.name} className={`relative ${plan.popular ? \"border-primary shadow-lg\" : \"border-border\"}`}>\n            {plan.popular && (\n              <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\" variant=\"default\">\n                Le plus populaire\n              </Badge>\n            )}\n\n            <CardHeader className=\"text-center pb-8\">\n              <CardTitle className=\"text-2xl font-bold\">{plan.name}</CardTitle>\n              <CardDescription className=\"text-base\">{plan.description}</CardDescription>\n              <div className=\"mt-4\">\n                <span className=\"text-5xl font-bold\">{price}€</span>\n                <span className=\"text-muted-foreground ml-1\">/{period}</span>\n                {monthlyEquivalent && (\n                  <div className=\"text-sm text-muted-foreground mt-1\">\n                    {monthlyEquivalent}€/mois facturé annuellement\n                  </div>\n                )}\n              </div>\n            </CardHeader>\n\n            <CardContent className=\"space-y-4 flex-grow\">\n              <div className=\"space-y-3\">\n                {plan.features.map((feature, featureIndex) => (\n                  <div key={featureIndex} className=\"flex items-center gap-3\">\n                    <Check className=\"h-5 w-5 text-green-500 flex-shrink-0\" />\n                    <span className=\"text-sm\">{feature}</span>\n                  </div>\n                ))}\n\n                {plan.limitations.map((limitation, limitationIndex) => (\n                  <div key={limitationIndex} className=\"flex items-center gap-3\">\n                    <X className=\"h-5 w-5 text-red-500 flex-shrink-0\" />\n                    <span className=\"text-sm text-muted-foreground\">{limitation}</span>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n\n            <CardFooter className={`mt-auto pt-6 ${index === 1 ? \"pb-2\" : \"pb-0\"}`}>\n              <Button className=\"w-full\" variant={plan.popular ? \"default\" : \"outline\"} size=\"lg\">\n                {plan.buttonText}\n              </Button>\n            </CardFooter>\n          </Card>\n        );\n      })}\n    </div>\n  );\n}\n\nconst defaultPricingPlans: PricingPlan[] = [\n  {\n    name: \"Gratuit\",\n    monthlyPrice: \"0\",\n    yearlyPrice: \"0\",\n    description: \"Parfait pour commencer\",\n    features: [\"Jusqu'à 3 projets\", \"5 GB de stockage\", \"Support communautaire\", \"Fonctionnalités de base\"],\n    limitations: [\"Pas de support prioritaire\", \"Fonctionnalités avancées limitées\"],\n    buttonText: \"Commencer gratuitement\",\n    popular: false,\n  },\n  {\n    name: \"Pro\",\n    monthlyPrice: \"29\",\n    yearlyPrice: \"290\",\n    description: \"Pour les professionnels\",\n    features: [\n      \"Projets illimités\",\n      \"100 GB de stockage\",\n      \"Support prioritaire\",\n      \"Toutes les fonctionnalités\",\n      \"Analytics avancées\",\n      \"Intégrations API\",\n    ],\n    limitations: [],\n    buttonText: \"Choisir Pro\",\n    popular: true,\n  },\n  {\n    name: \"Enterprise\",\n    monthlyPrice: \"99\",\n    yearlyPrice: \"990\",\n    description: \"Pour les grandes équipes\",\n    features: [\n      \"Tout du plan Pro\",\n      \"Stockage illimité\",\n      \"Support dédié 24/7\",\n      \"Sécurité avancée\",\n      \"SSO et SAML\",\n      \"Audit et conformité\",\n      \"Formation personnalisée\",\n    ],\n    limitations: [],\n    buttonText: \"Contacter les ventes\",\n    popular: false,\n  },\n];\n\nexport function Pricing({\n  title = \"Choisissez votre plan\",\n  description = \"Des tarifs simples et transparents qui s'adaptent à vos besoins. Commencez gratuitement et évoluez selon votre croissance.\",\n  pricingPlans = defaultPricingPlans,\n}: PricingProps) {\n  return (\n    <section>\n      <div className=\"mx-auto\">\n        {/* Header */}\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-4xl font-bold mb-4\">{title}</h2>\n          <p className=\"text-xl text-muted-foreground max-w-2xl mx-auto\">{description}</p>\n        </div>\n\n        {/* Pricing Toggle with Tabs */}\n        <Tabs defaultValue=\"monthly\" className=\"w-full\">\n          <div className=\"flex justify-center mb-12\">\n            <TabsList className=\"\">\n              <TabsTrigger value=\"monthly\" className=\"px-8 py-2\">\n                Mensuel\n              </TabsTrigger>\n              <TabsTrigger value=\"yearly\" className=\"px-8 py-2 relative\">\n                Annuel -17%\n              </TabsTrigger>\n            </TabsList>\n          </div>\n\n          <TabsContent value=\"monthly\" className=\"mt-0\">\n            <PricingCards isYearly={false} pricingPlans={pricingPlans} />\n          </TabsContent>\n\n          <TabsContent value=\"yearly\" className=\"mt-0\">\n            <PricingCards isYearly={true} pricingPlans={pricingPlans} />\n          </TabsContent>\n        </Tabs>\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}