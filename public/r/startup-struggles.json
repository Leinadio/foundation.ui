{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "startup-struggles",
  "type": "registry:block",
  "title": "Startup Struggles",
  "description": "A simple startup struggles component.",
  "files": [
    {
      "path": "src/blocks/landing-page/startup-struggles/index.tsx",
      "content": "import { Timeline } from \"@/components/ui/timeline\";\nimport { Headline } from \"@/components/shared/headline\";\nimport Image from \"next/image\";\nimport { ReactNode } from \"react\";\n\nexport interface StartupStrugglesItemImage {\n  src: string;\n  alt: string;\n  className?: string;\n  width?: number;\n  height?: number;\n}\n\nexport interface StartupStrugglesItem {\n  title: string;\n  paragraphs: string[];\n  image: StartupStrugglesItemImage;\n}\n\nexport interface StartupStrugglesProps {\n  title?: ReactNode;\n  description?: string;\n  badge?: { text: string; isBadge: boolean };\n  fromColor?: string;\n  viaColor?: string;\n  data?: StartupStrugglesItem[];\n}\n\nexport function StartupStruggles({\n  title = (\n    <>\n      <span className=\"text-red-600\">85%</span> des startups échouent car les{\" \"}\n      <span className=\"text-red-600\">fondateurs abandonnent</span>\n    </>\n  ),\n  description = \"Entre la technique, le business et les deadlines... Il y a tant de choses à gérer qu'on finit par perdre de vue l'essentiel.\",\n  badge = { text: \"RÉALITÉ DU TERRAIN\", isBadge: true },\n  fromColor = \"from-red-600\",\n  viaColor = \"via-red-900\",\n  data = [\n    {\n      title: \"Manque de temps\",\n      paragraphs: [\n        \"Entre les réunions, les deadlines et la gestion quotidienne, il devient impossible de se concentrer sur l'essentiel : développer son produit et sa vision.\",\n      ],\n      image: {\n        src: \"/illu/late_1-destructive.svg\",\n        alt: \"Illustration représentant la gestion du temps et des rendez-vous\",\n        className: \"w-8/12 mx-auto block\",\n        width: 1,\n        height: 1,\n      },\n    },\n    {\n      title: \"Complexité technique\",\n      paragraphs: [\n        \"Les développeurs sont confrontés à des défis techniques complexes, notamment en matière de sécurité, de performance et d'intégration avec les autres services.\",\n      ],\n      image: {\n        src: \"/illu/headache-destructive.svg\",\n        alt: \"Illustration représentant la gestion du temps et des rendez-vous\",\n        className: \"w-8/12 mx-auto block\",\n        width: 1,\n        height: 1,\n      },\n    },\n    {\n      title: \"Ressources limitées\",\n      paragraphs: [\n        \"Budget serré, équipe réduite, temps limité : chaque décision compte et il faut faire plus avec moins pour réussir à lancer son produit.\",\n      ],\n      image: {\n        src: \"/illu/limited_ressource-destructive.svg\",\n        alt: \"Illustration représentant la gestion du temps et des rendez-vous\",\n        className: \"w-8/12 mx-auto block\",\n        width: 1,\n        height: 1,\n      },\n    },\n  ],\n}: StartupStrugglesProps) {\n  const timelineData = data.map((entry) => {\n    const paragraphs = entry.paragraphs.map((text) => text);\n    return {\n      title: entry.title,\n      content: (\n        <div className=\"grid grid-cols-1 gap-6\">\n          {paragraphs.map((text, idx) => (\n            <p key={`p-${idx}`} className=\"text-sm md:text-lg\">\n              {text}\n            </p>\n          ))}\n          <Image\n            src={entry.image.src}\n            alt={entry.image.alt}\n            className={entry.image.className}\n            objectFit=\"cover\"\n            width={entry.image.width ?? 1}\n            height={entry.image.height ?? 1}\n          />\n        </div>\n      ),\n    };\n  });\n  return (\n    <section className=\"flex flex-col gap-20 md:gap-24\">\n      <Headline title={title} description={description} badge={badge} />\n\n      <div className=\"relative w-full overflow-clip\">\n        <Timeline data={timelineData} fromColor={fromColor} viaColor={viaColor} />\n      </div>\n    </section>\n  );\n}\n",
      "type": "registry:block",
      "target": "src/blocks/landing-page/startup-struggles/ui.tsx"
    },
    {
      "path": "src/components/ui/timeline.tsx",
      "content": "\"use client\";\nimport { useScroll, useTransform, motion } from \"motion/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface TimelineEntry {\n  title: string;\n  content: React.ReactNode;\n}\n\ninterface TimelineProps {\n  data: TimelineEntry[];\n  fromColor?: string;\n  viaColor?: string;\n}\n\nexport const Timeline = ({ data, fromColor = \"from-purple-500\", viaColor = \"via-red-500\" }: TimelineProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [height, setHeight] = useState(0);\n\n  useEffect(() => {\n    if (ref.current) {\n      const rect = ref.current.getBoundingClientRect();\n      setHeight(rect.height);\n    }\n  }, [ref]);\n\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: [\"start 10%\", \"end 50%\"],\n  });\n\n  const heightTransform = useTransform(scrollYProgress, [0, 1], [0, height]);\n  const opacityTransform = useTransform(scrollYProgress, [0, 0.1], [0, 1]);\n\n  return (\n    <div className=\"w-full font-sans md:px-10\" ref={containerRef}>\n      <div ref={ref} className=\"relative max-w-7xl mx-auto pb-20\">\n        {data.map((item, index) => (\n          <div\n            key={index}\n            className={`flex justify-start ${index === 0 ? \"pt-0\" : \"pt-10\"} ${\n              index === 0 ? \"md:pt-0\" : \"md:pt-40\"\n            } md:gap-10 `}\n          >\n            <div className=\"sticky flex flex-col md:flex-row z-40 items-center top-40 self-start max-w-xs lg:max-w-sm md:w-full\">\n              <div className=\"h-10 absolute left-3 md:left-3 w-10 rounded-full bg-white dark:bg-black flex items-center justify-center\">\n                <div className=\"h-4 w-4 rounded-full bg-neutral-200 dark:bg-neutral-800 border border-neutral-300 dark:border-neutral-700 p-2\" />\n              </div>\n              <h3 className=\"hidden md:block text-xl md:pl-20 md:text-5xl font-bold text-neutral-500 dark:text-neutral-200 \">\n                {item.title}\n              </h3>\n            </div>\n\n            <div className=\"relative pl-20 pr-4 md:pl-4 w-full\">\n              <h3 className=\"md:hidden block text-2xl mb-4 text-left font-bold text-neutral-500 dark:text-neutral-500\">\n                {item.title}\n              </h3>\n              {item.content}{\" \"}\n            </div>\n          </div>\n        ))}\n        <div\n          style={{\n            height: height + \"px\",\n          }}\n          className=\"absolute md:left-8 left-8 top-0 overflow-hidden w-[2px] bg-[linear-gradient(to_bottom,var(--tw-gradient-stops))] from-transparent from-[0%] via-neutral-200 dark:via-neutral-700 to-transparent to-[99%]  [mask-image:linear-gradient(to_bottom,transparent_0%,black_10%,black_90%,transparent_100%)] \"\n        >\n          <motion.div\n            style={{\n              height: heightTransform,\n              opacity: opacityTransform,\n            }}\n            className={`absolute inset-x-0 top-0 w-[2px] bg-gradient-to-t ${fromColor} ${viaColor} to-transparent from-[0%] via-[10%] rounded-full`}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n",
      "type": "registry:component"
    },
    {
      "path": "src/components/shared/headline/index.tsx",
      "content": "import { Badge } from \"@/components/ui/badge\";\nimport { ReactNode } from \"react\";\n\ninterface HeadlineProps {\n  title: ReactNode;\n  description: string;\n  badge: {\n    text: string;\n    isBadge: boolean;\n  };\n}\n\nexport function Headline({ title, description, badge }: HeadlineProps) {\n  const displayBadge = () => {\n    if (badge.isBadge) {\n      return (\n        <Badge variant=\"outline\" className={`text-primary border-primary`}>\n          {badge.text}\n        </Badge>\n      );\n    }\n    return <p className={`text-sm lg:text-lg text-primary font-semibold uppercase`}>{badge.text}</p>;\n  };\n  return (\n    <div className=\"flex flex-col items-center gap-4 text-center mb-0 max-w-5xl mx-auto\">\n      {displayBadge()}\n      <h2 className=\"text-4xl md:text-6xl font-semibold text-foreground leading-tight\">{title}</h2>\n      <p className=\"text-xl md:text-2xl text-muted-foreground max-w-4xl\">{description}</p>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    }
  ]
}