import type { Meta, StoryObj } from "@storybook/nextjs-vite";
import { HeroRow } from "@/components/ui/hero-row";
import { Button } from "@/components/ui/button";
import { Icons, Variant } from "@/components/ui/icons";

const meta = {
  title: "Landing Page/HeroRow",
  component: HeroRow,
  parameters: {
    layout: "fullscreen",
  },
  tags: ["autodocs"],
  argTypes: {
    badge: {
      control: "text",
      description: "Texte du badge en haut du hero",
    },
    title: {
      control: "text",
      description: "Titre principal du hero",
    },
    description: {
      control: "text",
      description: "Description d√©taill√©e du hero",
    },
    className: {
      control: "text",
      description: "Classes CSS additionnelles",
    },
  },
} satisfies Meta<typeof HeroRow>;

export default meta;

type Story = StoryObj<typeof meta>;

export const Default: Story = {
  args: {
    badge: "üöÄ Nouveau - Validation d'id√©e par IA",
    title: "Testez votre id√©e de business avant de perdre du temps",
    description:
      "Notre IA analyse votre id√©e sous tous les angles ‚Äì march√©, cible, probl√®me, solution, business model ‚Äì et vous fournit une validation claire, rapide et visuelle.",
  },
};

export const WithCustomCTA: Story = {
  args: {
    badge: "üíº Pour les freelances",
    title: "Envoyez un devis automatiquement d√®s qu'un client vous contacte",
    description:
      "Notre extension Chrome d√©tecte les demandes entrantes et g√©n√®re un devis instantan√©ment, pr√™t √† √™tre envoy√©. Gagnez du temps, professionnalisez vos √©changes, et ne ratez plus jamais une opportunit√©.",
    children: (
      <HeroRow.CtaSection>
        <div className="flex flex-col sm:flex-row gap-3">
          <Button size="lg" variant="outline">
            Voir la d√©mo
          </Button>
          <Button size="lg">Commencer gratuitement</Button>
        </div>
      </HeroRow.CtaSection>
    ),
  },
};

export const WithCustomVisual: Story = {
  args: {
    badge: "üé® Design moderne",
    title: "Cr√©ez des interfaces exceptionnelles",
    description:
      "Notre plateforme vous offre tous les outils n√©cessaires pour concevoir des exp√©riences utilisateur remarquables et des interfaces visuellement attrayantes.",
    children: (
      <HeroRow.VisualSection>
        <div className="relative">
          <div className="w-80 h-80 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-3xl flex items-center justify-center shadow-2xl">
            <div className="text-center space-y-4">
              <div className="w-20 h-20 bg-gradient-to-br from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center mx-auto animate-bounce">
                <span className="text-3xl">üéØ</span>
              </div>
              <p className="text-lg font-semibold text-foreground">Interface moderne</p>
              <p className="text-sm text-muted-foreground">Design responsive</p>
            </div>
          </div>
          <div className="absolute -top-6 -right-6 w-24 h-24 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-2xl animate-bounce shadow-lg">
            <div className="w-full h-full flex items-center justify-center">
              <Icons variant={Variant.ArrowDown1} className="w-8 h-8 text-white" />
            </div>
          </div>
          <div className="absolute -bottom-6 -left-6 w-20 h-20 bg-gradient-to-br from-green-500/40 to-emerald-500/40 rounded-xl animate-pulse shadow-lg">
            <div className="w-full h-full flex items-center justify-center">
              <Icons variant={Variant.ArrowDown1} className="w-6 h-6 text-white" />
            </div>
          </div>
        </div>
      </HeroRow.VisualSection>
    ),
  },
};

export const WithBothCustomSections: Story = {
  args: {
    badge: "‚ö° Performance maximale",
    title: "Optimisez votre application pour la vitesse",
    description:
      "D√©couvrez comment nos outils d'optimisation peuvent am√©liorer drastiquement les performances de votre application web et offrir une exp√©rience utilisateur fluide.",
    children: (
      <>
        <HeroRow.CtaSection>
          <div className="flex flex-col sm:flex-row gap-3">
            <Button size="lg" variant="outline">
              Tester la performance
            </Button>
            <Button size="lg">Optimiser maintenant</Button>
          </div>
        </HeroRow.CtaSection>
        <HeroRow.VisualSection>
          <div className="relative">
            <div className="w-80 h-80 bg-gradient-to-br from-orange-500/20 to-red-500/20 rounded-3xl flex items-center justify-center shadow-2xl">
              <div className="text-center space-y-4">
                <div className="w-16 h-16 bg-gradient-to-br from-orange-500 to-red-500 rounded-2xl flex items-center justify-center mx-auto">
                  <Icons variant={Variant.ArrowDown4} color="white" className="w-8 h-8" />
                </div>
                <p className="text-sm font-medium text-foreground">Performance</p>
                <div className="flex items-center gap-2 text-xs text-muted-foreground">
                  <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                  <span>Optimis√©</span>
                </div>
              </div>
            </div>
            <div className="absolute -top-4 -right-4 w-16 h-16 bg-gradient-to-br from-green-500 to-emerald-500 rounded-xl animate-pulse"></div>
            <div className="absolute -bottom-4 -left-4 w-12 h-12 bg-gradient-to-br from-blue-500/40 to-cyan-500/40 rounded-lg animate-bounce"></div>
          </div>
        </HeroRow.VisualSection>
      </>
    ),
  },
};

export const MinimalContent: Story = {
  args: {
    badge: "‚ú® Simple",
    title: "Titre court et impactant",
    description: "Description concise et efficace pour un message direct.",
  },
};

export const LongContent: Story = {
  args: {
    badge: "üåü Fonctionnalit√© avanc√©e avec un badge tr√®s long",
    title:
      "Un titre tr√®s long qui peut s'√©tendre sur plusieurs lignes pour tester la responsivit√© et l'adaptation du composant",
    description:
      "Une description tr√®s d√©taill√©e qui peut s'√©tendre sur plusieurs lignes pour tester comment le composant s'adapte au contenu long et comment il g√®re l'espacement et la mise en page avec du texte √©tendu.",
  },
};

export const BusinessFocused: Story = {
  args: {
    badge: "üè¢ Solutions entreprise",
    title: "Transformez votre organisation avec nos outils",
    description:
      "Nos solutions d'entreprise sont con√ßues pour s'adapter aux besoins complexes des grandes organisations, offrant scalabilit√©, s√©curit√© et performance.",
    children: (
      <HeroRow.CtaSection>
        <div className="flex flex-col sm:flex-row gap-3">
          <Button size="lg" variant="outline">
            Demander une d√©mo
          </Button>
          <Button size="lg">Contacter les ventes</Button>
        </div>
      </HeroRow.CtaSection>
    ),
  },
};

export const WithCustomStyling: Story = {
  args: {
    badge: "üé® Style personnalis√©",
    title: "HeroRow avec classes CSS personnalis√©es",
    description: "Ce composant utilise des classes CSS personnalis√©es pour modifier l'apparence et le comportement.",
    className: "bg-gradient-to-r from-primary/5 to-secondary/5 py-20",
  },
};

export const Mobile: Story = {
  args: {
    ...Default.args,
  },
  parameters: {
    viewport: {
      defaultViewport: "mobile1",
    },
  },
};

export const Tablet: Story = {
  args: {
    ...Default.args,
  },
  parameters: {
    viewport: {
      defaultViewport: "tablet",
    },
  },
};

export const DarkTheme: Story = {
  args: {
    ...Default.args,
  },
  parameters: {
    backgrounds: {
      default: "dark",
    },
  },
};
